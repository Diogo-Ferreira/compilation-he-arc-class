
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9C29784371400A31019A2568E9075153'
    
_lr_action_items = {'LOG':([0,2,3,5,6,7,8,12,15,19,21,22,23,26,31,33,41,42,44,45,46,47,48,53,54,57,61,62,63,66,67,],[1,-9,-7,-8,-4,1,-6,-5,-3,-21,-23,-22,-10,-13,1,-25,1,-26,-24,-18,-20,-17,-19,-14,1,-11,-16,1,1,-12,-15,]),'NUMBER':([1,10,13,18,20,24,30,34,35,36,37,39,55,],[19,27,19,19,19,19,19,19,19,19,19,50,59,]),'BY':([50,],[55,]),')':([19,21,22,32,33,38,44,45,46,47,48,56,],[-21,-23,-22,44,-25,49,-24,-18,-20,-17,-19,60,]),'(':([1,4,11,13,18,20,24,30,34,35,36,37,],[18,24,28,18,18,18,18,18,18,18,18,18,]),'FRAME':([0,2,3,5,6,7,8,12,15,19,21,22,23,26,31,33,41,42,44,45,46,47,48,53,54,57,61,62,63,66,67,],[4,-9,-7,-8,-4,4,-6,-5,-3,-21,-23,-22,-10,-13,4,-25,4,-26,-24,-18,-20,-17,-19,-14,4,-11,-16,4,4,-12,-15,]),',':([40,],[51,]),'TO':([27,],[39,]),'ADD_OP':([1,13,18,19,20,21,22,23,24,29,30,32,33,34,35,36,37,38,42,44,45,46,47,48,],[20,20,20,-21,20,-23,-22,36,20,36,20,36,-25,20,20,20,20,36,36,-24,-18,36,-17,36,]),':':([14,],[30,]),'$end':([2,3,5,6,7,8,12,15,17,19,21,22,23,25,26,33,42,44,45,46,47,48,53,57,61,66,67,],[-9,-7,-8,-4,-1,-6,-5,-3,0,-21,-23,-22,-10,-2,-13,-25,-26,-24,-18,-20,-17,-19,-14,-11,-16,-12,-15,]),'@':([0,2,3,5,6,7,8,12,15,19,21,22,23,26,31,33,41,42,44,45,46,47,48,53,54,57,61,62,63,66,67,],[9,-9,-7,-8,-4,9,-6,-5,-3,-21,-23,-22,-10,-13,9,-25,9,-26,-24,-18,-20,-17,-19,-14,9,-11,-16,9,9,-12,-15,]),'STRING':([1,9,13,18,20,24,28,30,34,35,36,37,51,],[21,26,21,21,21,21,40,21,21,21,21,21,56,]),'FOR':([0,2,3,5,6,7,8,12,15,19,21,22,23,26,31,33,41,42,44,45,46,47,48,53,54,57,61,62,63,66,67,],[10,-9,-7,-8,-4,10,-6,-5,-3,-21,-23,-22,-10,-13,10,-25,10,-26,-24,-18,-20,-17,-19,-14,10,-11,-16,10,10,-12,-15,]),'IS':([19,21,22,23,29,32,33,38,42,44,45,46,47,48,],[-21,-23,-22,35,35,35,-25,35,35,-24,-18,35,-17,35,]),'ANIMATION':([0,2,3,5,6,7,8,12,15,19,21,22,23,26,31,33,41,42,44,45,46,47,48,53,54,57,61,62,63,66,67,],[11,-9,-7,-8,-4,11,-6,-5,-3,-21,-23,-22,-10,-13,11,-25,11,-26,-24,-18,-20,-17,-19,-14,11,-11,-16,11,11,-12,-15,]),'IF':([0,2,3,5,6,7,8,12,15,19,21,22,23,26,31,33,41,42,44,45,46,47,48,53,54,57,61,62,63,66,67,],[13,-9,-7,-8,-4,13,-6,-5,-3,-21,-23,-22,-10,-13,13,-25,13,-26,-24,-18,-20,-17,-19,-14,13,-11,-16,13,13,-12,-15,]),'MUL_OP':([19,21,22,23,29,32,33,38,42,44,45,46,47,48,],[-21,-23,-22,34,34,34,-25,34,34,-24,-18,34,34,34,]),'IDENTIFIER':([0,1,2,3,5,6,7,8,12,13,15,18,19,20,21,22,23,24,26,30,31,33,34,35,36,37,41,42,44,45,46,47,48,53,54,57,61,62,63,66,67,],[14,22,-9,-7,-8,-4,14,-6,-5,22,-3,22,-21,22,-23,-22,-10,22,-13,22,14,-25,22,22,22,22,14,-26,-24,-18,-20,-17,-19,-14,14,-11,-16,14,14,-12,-15,]),'KEYFRAMES':([0,2,3,5,6,7,8,12,15,19,21,22,23,26,31,33,41,42,44,45,46,47,48,53,54,57,61,62,63,66,67,],[16,-9,-7,-8,-4,16,-6,-5,-3,-21,-23,-22,-10,-13,16,-25,16,-26,-24,-18,-20,-17,-19,-14,16,-11,-16,16,16,-12,-15,]),'{':([16,19,21,22,29,33,44,45,46,47,48,49,59,60,],[31,-21,-23,-22,41,-25,-24,-18,-20,-17,-19,54,62,63,]),'}':([2,3,5,6,7,8,12,15,19,21,22,23,25,26,33,42,43,44,45,46,47,48,52,53,57,58,61,64,65,66,67,],[-9,-7,-8,-4,-1,-6,-5,-3,-21,-23,-22,-10,-2,-13,-25,-26,53,-24,-18,-20,-17,-19,57,-14,-11,61,-16,66,67,-12,-15,]),'MOD':([19,21,22,23,29,32,33,38,42,44,45,46,47,48,],[-21,-23,-22,37,37,37,-25,37,37,-24,-18,37,-17,37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assignation':([0,7,31,41,54,62,63,],[15,15,15,15,15,15,15,]),'frame':([0,7,31,41,54,62,63,],[2,2,2,2,2,2,2,]),'condition':([0,7,31,41,54,62,63,],[12,12,12,12,12,12,12,]),'keyframes':([0,7,31,41,54,62,63,],[3,3,3,3,3,3,3,]),'animation':([0,7,31,41,54,62,63,],[5,5,5,5,5,5,5,]),'css':([0,7,31,41,54,62,63,],[8,8,8,8,8,8,8,]),'statement':([0,7,31,41,54,62,63,],[7,7,7,7,7,7,7,]),'expression':([1,13,18,20,24,30,34,35,36,37,],[23,29,32,33,38,42,45,46,47,48,]),'structure':([0,7,31,41,54,62,63,],[6,6,6,6,6,6,6,]),'programme':([0,7,31,41,54,62,63,],[17,25,43,52,58,64,65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser.py',12),
  ('programme -> statement programme','programme',2,'p_programme_recursive','parser.py',17),
  ('statement -> assignation','statement',1,'p_statement','parser.py',22),
  ('statement -> structure','statement',1,'p_statement','parser.py',23),
  ('statement -> condition','statement',1,'p_statement','parser.py',24),
  ('statement -> css','statement',1,'p_statement','parser.py',25),
  ('statement -> keyframes','statement',1,'p_statement','parser.py',26),
  ('statement -> animation','statement',1,'p_statement','parser.py',27),
  ('statement -> frame','statement',1,'p_statement','parser.py',28),
  ('statement -> LOG expression','statement',2,'p_statement_print','parser.py',33),
  ('condition -> IF expression { programme }','condition',5,'p_condition','parser.py',38),
  ('structure -> FOR NUMBER TO NUMBER BY NUMBER { programme }','structure',9,'p_structure','parser.py',43),
  ('css -> @ STRING','css',2,'p_css','parser.py',53),
  ('keyframes -> KEYFRAMES { programme }','keyframes',4,'p_keyframes','parser.py',58),
  ('animation -> ANIMATION ( STRING , STRING ) { programme }','animation',9,'p_animation','parser.py',63),
  ('frame -> FRAME ( expression ) { programme }','frame',7,'p_frame','parser.py',72),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser.py',77),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser.py',78),
  ('expression -> expression MOD expression','expression',3,'p_expression_op','parser.py',79),
  ('expression -> expression IS expression','expression',3,'p_expression_logic','parser.py',84),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parser.py',89),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parser.py',90),
  ('expression -> STRING','expression',1,'p_expression_num_or_var','parser.py',91),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser.py',97),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser.py',109),
  ('assignation -> IDENTIFIER : expression','assignation',3,'p_assign','parser.py',114),
]
