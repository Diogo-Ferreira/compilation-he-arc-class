
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '6888799842867D8F2B7D3A9E1F1C45F3'
    
_lr_action_items = {'LOG':([0,2,3,5,6,7,8,12,15,18,19,22,23,26,31,38,42,43,45,46,47,48,49,50,55,56,59,63,64,65,68,69,],[1,-9,-7,-8,-4,1,-6,-5,-3,-10,-22,-24,-23,-13,1,-26,1,-27,-18,-21,-17,-20,-19,-25,-14,1,-11,-16,1,1,-12,-15,]),'NUMBER':([1,10,13,20,21,24,30,32,33,34,35,36,40,57,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'BY':([19,22,23,38,45,46,47,48,49,50,52,],[-22,-24,-23,-26,-18,-21,-17,-20,-19,-25,57,]),')':([19,22,23,37,38,39,45,46,47,48,49,50,58,],[-22,-24,-23,50,-26,51,-18,-21,-17,-20,-19,-25,62,]),'(':([1,4,10,11,13,20,21,24,30,32,33,34,35,36,40,57,],[20,24,20,28,20,20,20,20,20,20,20,20,20,20,20,20,]),'FRAME':([0,2,3,5,6,7,8,12,15,18,19,22,23,26,31,38,42,43,45,46,47,48,49,50,55,56,59,63,64,65,68,69,],[4,-9,-7,-8,-4,4,-6,-5,-3,-10,-22,-24,-23,-13,4,-26,4,-27,-18,-21,-17,-20,-19,-25,-14,4,-11,-16,4,4,-12,-15,]),',':([41,],[53,]),'TO':([19,22,23,27,38,45,46,47,48,49,50,],[-22,-24,-23,40,-26,-18,-21,-17,-20,-19,-25,]),'ADD_OP':([1,10,13,18,19,20,21,22,23,24,27,29,30,32,33,34,35,36,37,38,39,40,43,45,46,47,48,49,50,52,57,61,],[21,21,21,34,-22,21,21,-24,-23,21,34,34,21,21,21,21,21,21,34,-26,34,21,34,-18,34,-17,34,34,-25,34,21,34,]),':':([14,],[30,]),'$end':([2,3,5,6,7,8,12,15,17,18,19,22,23,25,26,38,43,45,46,47,48,49,50,55,59,63,68,69,],[-9,-7,-8,-4,-1,-6,-5,-3,0,-10,-22,-24,-23,-2,-13,-26,-27,-18,-21,-17,-20,-19,-25,-14,-11,-16,-12,-15,]),'@':([0,2,3,5,6,7,8,12,15,18,19,22,23,26,31,38,42,43,45,46,47,48,49,50,55,56,59,63,64,65,68,69,],[9,-9,-7,-8,-4,9,-6,-5,-3,-10,-22,-24,-23,-13,9,-26,9,-27,-18,-21,-17,-20,-19,-25,-14,9,-11,-16,9,9,-12,-15,]),'STRING':([1,9,10,13,20,21,24,28,30,32,33,34,35,36,40,53,57,],[22,26,22,22,22,22,22,41,22,22,22,22,22,22,22,58,22,]),'FOR':([0,2,3,5,6,7,8,12,15,18,19,22,23,26,31,38,42,43,45,46,47,48,49,50,55,56,59,63,64,65,68,69,],[10,-9,-7,-8,-4,10,-6,-5,-3,-10,-22,-24,-23,-13,10,-26,10,-27,-18,-21,-17,-20,-19,-25,-14,10,-11,-16,10,10,-12,-15,]),'IS':([18,19,22,23,27,29,37,38,39,43,45,46,47,48,49,50,52,61,],[33,-22,-24,-23,33,33,33,-26,33,33,-18,33,-17,33,33,-25,33,33,]),'ANIMATION':([0,2,3,5,6,7,8,12,15,18,19,22,23,26,31,38,42,43,45,46,47,48,49,50,55,56,59,63,64,65,68,69,],[11,-9,-7,-8,-4,11,-6,-5,-3,-10,-22,-24,-23,-13,11,-26,11,-27,-18,-21,-17,-20,-19,-25,-14,11,-11,-16,11,11,-12,-15,]),'CMP_OP':([18,19,22,23,27,29,37,38,39,43,45,46,47,48,49,50,52,61,],[35,-22,-24,-23,35,35,35,-26,35,35,-18,35,-17,35,35,-25,35,35,]),'IF':([0,2,3,5,6,7,8,12,15,18,19,22,23,26,31,38,42,43,45,46,47,48,49,50,55,56,59,63,64,65,68,69,],[13,-9,-7,-8,-4,13,-6,-5,-3,-10,-22,-24,-23,-13,13,-26,13,-27,-18,-21,-17,-20,-19,-25,-14,13,-11,-16,13,13,-12,-15,]),'MUL_OP':([18,19,22,23,27,29,37,38,39,43,45,46,47,48,49,50,52,61,],[32,-22,-24,-23,32,32,32,-26,32,32,-18,32,32,32,32,-25,32,32,]),'IDENTIFIER':([0,1,2,3,5,6,7,8,10,12,13,15,18,19,20,21,22,23,24,26,30,31,32,33,34,35,36,38,40,42,43,45,46,47,48,49,50,55,56,57,59,63,64,65,68,69,],[14,23,-9,-7,-8,-4,14,-6,23,-5,23,-3,-10,-22,23,23,-24,-23,23,-13,23,14,23,23,23,23,23,-26,23,14,-27,-18,-21,-17,-20,-19,-25,-14,14,23,-11,-16,14,14,-12,-15,]),'KEYFRAMES':([0,2,3,5,6,7,8,12,15,18,19,22,23,26,31,38,42,43,45,46,47,48,49,50,55,56,59,63,64,65,68,69,],[16,-9,-7,-8,-4,16,-6,-5,-3,-10,-22,-24,-23,-13,16,-26,16,-27,-18,-21,-17,-20,-19,-25,-14,16,-11,-16,16,16,-12,-15,]),'{':([16,19,22,23,29,38,45,46,47,48,49,50,51,61,62,],[31,-22,-24,-23,42,-26,-18,-21,-17,-20,-19,-25,56,64,65,]),'}':([2,3,5,6,7,8,12,15,18,19,22,23,25,26,38,43,44,45,46,47,48,49,50,54,55,59,60,63,66,67,68,69,],[-9,-7,-8,-4,-1,-6,-5,-3,-10,-22,-24,-23,-2,-13,-26,-27,55,-18,-21,-17,-20,-19,-25,59,-14,-11,63,-16,68,69,-12,-15,]),'MOD':([18,19,22,23,27,29,37,38,39,43,45,46,47,48,49,50,52,61,],[36,-22,-24,-23,36,36,36,-26,36,36,-18,36,-17,36,36,-25,36,36,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assignation':([0,7,31,42,56,64,65,],[15,15,15,15,15,15,15,]),'frame':([0,7,31,42,56,64,65,],[2,2,2,2,2,2,2,]),'condition':([0,7,31,42,56,64,65,],[12,12,12,12,12,12,12,]),'keyframes':([0,7,31,42,56,64,65,],[3,3,3,3,3,3,3,]),'animation':([0,7,31,42,56,64,65,],[5,5,5,5,5,5,5,]),'css':([0,7,31,42,56,64,65,],[8,8,8,8,8,8,8,]),'statement':([0,7,31,42,56,64,65,],[7,7,7,7,7,7,7,]),'expression':([1,10,13,20,21,24,30,32,33,34,35,36,40,57,],[18,27,29,37,38,39,43,45,46,47,48,49,52,61,]),'structure':([0,7,31,42,56,64,65,],[6,6,6,6,6,6,6,]),'programme':([0,7,31,42,56,64,65,],[17,25,44,54,60,66,67,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser.py',13),
  ('programme -> statement programme','programme',2,'p_programme_recursive','parser.py',18),
  ('statement -> assignation','statement',1,'p_statement','parser.py',23),
  ('statement -> structure','statement',1,'p_statement','parser.py',24),
  ('statement -> condition','statement',1,'p_statement','parser.py',25),
  ('statement -> css','statement',1,'p_statement','parser.py',26),
  ('statement -> keyframes','statement',1,'p_statement','parser.py',27),
  ('statement -> animation','statement',1,'p_statement','parser.py',28),
  ('statement -> frame','statement',1,'p_statement','parser.py',29),
  ('statement -> LOG expression','statement',2,'p_statement_print','parser.py',34),
  ('condition -> IF expression { programme }','condition',5,'p_condition','parser.py',39),
  ('structure -> FOR expression TO expression BY expression { programme }','structure',9,'p_structure','parser.py',44),
  ('css -> @ STRING','css',2,'p_css','parser.py',54),
  ('keyframes -> KEYFRAMES { programme }','keyframes',4,'p_keyframes','parser.py',59),
  ('animation -> ANIMATION ( STRING , STRING ) { programme }','animation',9,'p_animation','parser.py',64),
  ('frame -> FRAME ( expression ) { programme }','frame',7,'p_frame','parser.py',73),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser.py',78),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser.py',79),
  ('expression -> expression MOD expression','expression',3,'p_expression_op','parser.py',80),
  ('expression -> expression CMP_OP expression','expression',3,'p_expression_op','parser.py',81),
  ('expression -> expression IS expression','expression',3,'p_expression_logic','parser.py',86),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parser.py',103),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parser.py',104),
  ('expression -> STRING','expression',1,'p_expression_num_or_var','parser.py',105),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser.py',110),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser.py',115),
  ('assignation -> IDENTIFIER : expression','assignation',3,'p_assign','parser.py',120),
]
