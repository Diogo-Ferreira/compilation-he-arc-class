
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '19156572672BFB7E55CC46585EF59D87'
    
_lr_action_items = {'MUL_OP':([10,12,13,16,17,18,24,26,27,33,],[-10,-11,20,20,20,-14,-12,-9,20,-13,]),'IDENTIFIER':([0,2,8,9,11,15,20,21,29,34,],[1,12,12,12,12,1,12,12,1,1,]),'LOG':([0,15,29,34,],[2,2,2,2,]),'FOR':([0,15,29,34,],[3,3,3,3,]),')':([10,12,17,18,19,24,26,27,33,],[-10,-11,24,-14,25,-12,-9,-8,-13,]),'(':([2,8,9,11,12,20,21,],[9,9,9,9,19,9,9,]),'NUMBER':([2,3,8,9,11,20,21,22,30,],[10,14,10,10,10,10,10,28,32,]),'BY':([28,],[30,]),'TO':([14,],[22,]),'ADD_OP':([2,8,9,10,11,12,13,16,17,18,20,21,24,26,27,33,],[11,11,11,-10,11,-11,21,21,21,-14,11,11,-12,-9,-8,-13,]),';':([4,6,7,10,12,13,16,18,24,26,27,33,36,],[15,-4,-3,-10,-11,-5,-15,-14,-12,-9,-8,-13,-6,]),':':([1,],[8,]),'}':([4,6,7,10,12,13,16,18,23,24,26,27,31,33,35,36,],[-1,-4,-3,-10,-11,-5,-15,-14,-2,-12,-9,-8,33,-13,36,-6,]),'{':([25,32,],[29,34,]),'$end':([4,5,6,7,10,12,13,16,18,23,24,26,27,33,36,],[-1,0,-4,-3,-10,-11,-5,-15,-14,-2,-12,-9,-8,-13,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'structure':([0,15,29,34,],[6,6,6,6,]),'expression':([2,8,9,11,20,21,],[13,16,17,18,26,27,]),'assignation':([0,15,29,34,],[7,7,7,7,]),'statement':([0,15,29,34,],[4,4,4,4,]),'programme':([0,15,29,34,],[5,23,31,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser.py',10),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parser.py',15),
  ('statement -> assignation','statement',1,'p_statement','parser.py',20),
  ('statement -> structure','statement',1,'p_statement','parser.py',21),
  ('statement -> LOG expression','statement',2,'p_statement_print','parser.py',26),
  ('structure -> FOR NUMBER TO NUMBER BY NUMBER { programme }','structure',9,'p_structure','parser.py',31),
  ('css -> @ STRING','css',2,'p_css','parser.py',41),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser.py',46),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser.py',47),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parser.py',52),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parser.py',53),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser.py',58),
  ('expression -> IDENTIFIER ( ) { programme }','expression',6,'p_function','parser.py',63),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser.py',68),
  ('assignation -> IDENTIFIER : expression','assignation',3,'p_assign','parser.py',73),
]
